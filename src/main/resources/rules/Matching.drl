package com.suse.matcher.rules;

import com.suse.matcher.model.Match;
import com.suse.matcher.model.Match.Kind;
import com.suse.matcher.model.Subscription;
import com.suse.matcher.model.System;

rule "match valid user-specified matches"
    agenda-group "Matching"
    when
        Match($systemId : systemId, $subscriptionId : subscriptionId, kind == Kind.USER_PINNED)
        Match(systemId == $systemId, subscriptionId == $subscriptionId, kind == Kind.POSSIBLE)
    then
        insert(new Match($systemId, $subscriptionId, Kind.CONFIRMED));
end

rule "match valid matches"
    agenda-group "Matching"
    salience $subscription.computeFitnessTo($system)
    when
        $system : System($systemId : id)
        Match($subscriptionId : subscriptionId, systemId == $systemId, kind == Kind.POSSIBLE)
        $subscription: Subscription($systemLimit : systemLimit, id == $subscriptionId, matchAnyProductOnSystem($system), systemLimit > 0)
        not (Match(systemId == $systemId, kind == Kind.CONFIRMED))
    then
        insert(new Match($systemId, $subscriptionId, Kind.CONFIRMED));
        modify($subscription){
            systemLimit = $systemLimit -1
        }
end
