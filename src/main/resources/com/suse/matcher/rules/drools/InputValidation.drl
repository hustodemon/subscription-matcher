package com.suse.matcher.rules.drools;

import java.util.TreeMap;
import com.suse.matcher.facts.Message;
import com.suse.matcher.facts.Subscription;
import com.suse.matcher.facts.SystemProduct;
import com.suse.matcher.facts.CurrentTime;

rule "subscriptionNotExpired"
    when
        CurrentTime($timestamp : timestamp)
        $subscription: Subscription((endDate != null && endDate < $timestamp) || (startDate != null && startDate > $timestamp))
    then
        modify($subscription) {
            ignored = true;
        }
end

rule "subscriptionSystemLimitHasValue"
    when
        $subscription: Subscription(quantity == null)
    then
        modify($subscription) {
            ignored = true;
        }
end

rule "unknownPartNumber"
    when
        $subscription: Subscription(policy == null, partNumber != null)
    then
        TreeMap<String, String> data = new TreeMap<>();
        data.put("part_number", $subscription.partNumber);
        insertLogical(new Message(Message.Level.DEBUG, "unknown_part_number", data));
end

rule "blacklistedProduct"
    when
        // novell-open-enterprise-server-i386 9
        $systemProduct : SystemProduct(productId == 955) or
        // novell-open-enterprise-server-x86_64 9
        $systemProduct : SystemProduct(productId == 957) or
        // open_enterprise_server 11
        $systemProduct : SystemProduct(productId == 1232) or
        // open_enterprise_server 11.1
        $systemProduct : SystemProduct(productId == 1241) or
        // open_enterprise_server 11.2
        $systemProduct : SystemProduct(productId == 1242)
    then
        retract($systemProduct);
end
